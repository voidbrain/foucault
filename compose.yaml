services:
  gpio-emulator-service:
    build:
      context: ./gpio-emulator
    container_name: gpio-emulator-service
    ports:
      - "3005:3005"
    networks:
      - internal-net
    restart: unless-stopped
    environment:
      - MQTT_BROKER_URL=mqtt://mqtt-broker:1883
      - MOCK_I2C_DEVICE="/dev/i2c-mock"
    privileged: true
    volumes:
      - ./mocks:/app/mocks

  config-service:
    build:
      context: ./config-service
    container_name: config-service
    ports:
      - "3004:3004"
    networks:
      - internal-net
    depends_on:
      - mqtt-broker
    environment:
      - MQTT_BROKER_URL=mqtt://mqtt-broker:1883
    restart: unless-stopped

  pid-balance-control:
    build:
      context: ./pid-balance
    container_name: pid-balance-service
    ports:
      - "3003:3003"
    privileged: true
    devices:
      - /dev/i2c-1:/dev/i2c-1
      - /dev/gpiomem:/dev/gpiomem
      - /dev/i2c-mock:/dev/i2c-mock
    volumes:
      - ./mocks:/app/mocks
    networks:
      - internal-net
    depends_on:
      - mqtt-broker
      - config-service
      - gpio-emulator-service
    environment:
      - MQTT_BROKER_URL=mqtt://mqtt-broker:1883
    restart: unless-stopped
    
  # webcam-stream:
  #   build:
  #     context: ./webcam-stream
  #   container_name: webcam-stream-service
  #   ports:
  #     - "3008:3008"
  #   networks:
  #     - internal-net

  # object-detection:
  #   build:
  #     context: ./object-detection
  #   container_name: object-detection-service
  #   ports:
  #     - "3000:3000"
  #   networks:
  #     - internal-net
  #   depends_on:
  #     - mqtt-broker
  #     - webcam-stream
  #   environment:
  #     - MQTT_BROKER_URL=mqtt://mqtt-broker:1883
  #   tty: true

  # obstacle-avoidance:
  #   build:
  #     context: ./obstacle-avoidance
  #   container_name: obstacle-avoidance-service
  #   ports:
  #     - "3002:3002"
  #   networks:
  #     - internal-net
  #   depends_on:
  #     - mqtt-broker
  #     - webcam-stream
  #   environment:
  #     - MQTT_BROKER_URL=mqtt://mqtt-broker:1883
  #   tty: true

  motor-controller:
    build:
      context: ./motor-controller
    container_name: motor-controller-service
    ports:
      - "3009:3009"
    privileged: true
    devices:
      - "/dev/gpiomem:/dev/gpiomem"
      - "/dev/i2c-1:/dev/i2c-1"
    environment:
      MQTT_BROKER_URL: mqtt://mqtt-broker:1883
    depends_on:
      - mqtt-broker
      - gpio-emulator-service
    networks:
      - internal-net
    restart: always
    volumes:
      - ./mocks:/app/mocks

  frontend:
    build:
      context: ./frontend
    container_name: frontend-service
    ports:
      - "8080:8080"
    networks:
      - internal-net
      - external-net
    depends_on:
      - mqtt-broker
      - config-service
      # - webcam-stream
    environment:
      - MQTT_BROKER_URL=mqtt://mqtt-broker:1883

  # code-server:
  #   build:
  #     context: ./code-server
  #     dockerfile: dockerfile  # Specify the custom filename here
  #   container_name: code-server
  #   ports:
  #     - "8089:8089"
  #   volumes:
  #     - ./workspace:/home/coder/project  # Mount the workspace directory to persist files
  #   environment:
  #     PASSWORD: "your_secure_password"
  #   networks:
  #     - internal-net  # Added network to allow access to other containers
  #   restart: unless-stopped

  # chrome-web:
  #   build:
  #     context: ./chrome-web
  #     dockerfile: dockerfile  # Specify the custom filename here
  #   container_name: chrome-web
  #   ports:
  #     - "8090:8090"
  #   environment:
  #     - DISPLAY=:99  # Use Xvfb virtual display
  #   volumes:
  #     - /tmp/.X11-unix:/tmp/.X11-unix  # Optional for real X11 forwarding, not needed with Xvfb
  #   command: ["xvfb-run", "--auto-servernum", "--server-args='-screen 0 1280x1024x24'", "google-chrome-stable", "--no-sandbox", "--remote-debugging-port=8090"]

  mqtt-broker:
    image: eclipse-mosquitto:latest
    container_name: mqtt-broker
    ports:
      - "1883:1883"
    networks:
      - internal-net
    volumes:
      - ./mqtt-broker/mosquitto/config:/mosquitto/config
      - ./mqtt-broker/mosquitto/data:/mosquitto/data
      - ./mqtt-broker/mosquitto/log:/mosquitto/log
    restart: unless-stopped

networks:
  internal-net:
    driver: bridge
  external-net:
    driver: bridge

volumes:
  grafana-storage:
